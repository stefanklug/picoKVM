#include <map>
#include <rfb/keysym.h>
#include "usb_hid_keys.h"

/* This is a rather silly mapping of vnc Keys to USB keycodes depending on shift and altgr. 
This could be autogenerated in a more intelligent way based on 
https://github.com/qemu/qemu/tree/master/pc-bios/keymaps
*/

std::map<uint32_t, int> vncScanToHID = {
    {XK_Escape, KEY_ESC},

    {XK_dead_circumflex, KEY_GRAVE},
    {XK_1, KEY_1},
    {XK_2, KEY_2},
    {XK_3, KEY_3},
    {XK_4, KEY_4},
    {XK_5, KEY_5},
    {XK_6, KEY_6},
    {XK_7, KEY_7},
    {XK_8, KEY_8},
    {XK_9, KEY_9},
    {XK_0, KEY_0},
    {XK_ssharp, KEY_MINUS},
    {XK_dead_acute, KEY_EQUAL},


    {XK_BackSpace, KEY_BACKSPACE},

    {XK_Tab, KEY_TAB},
    {XK_q, KEY_Q},
    {XK_w, KEY_W},
    {XK_e, KEY_E},
    {XK_r, KEY_R},
    {XK_t, KEY_T},
    {XK_z, KEY_Y},
    {XK_u, KEY_U},
    {XK_i, KEY_I},
    {XK_o, KEY_O},
    {XK_p, KEY_P},
    {XK_udiaeresis, KEY_LEFTBRACE},
    {XK_plus, KEY_RIGHTBRACE},
    
    {XK_Return, KEY_ENTER},

    {XK_a, KEY_A},
    {XK_s, KEY_S},
    {XK_d, KEY_D},
    {XK_f, KEY_F},
    {XK_g, KEY_G},
    {XK_h, KEY_H},
    {XK_j, KEY_J},
    {XK_k, KEY_K},
    {XK_l, KEY_L},
    {XK_odiaeresis, KEY_SEMICOLON},
    {XK_adiaeresis, KEY_APOSTROPHE},
    {XK_numbersign, KEY_BACKSLASH},

    {XK_less, KEY_102ND},
    {XK_y, KEY_Z},
    {XK_x, KEY_X},
    {XK_c, KEY_C},
    {XK_v, KEY_V},
    {XK_b, KEY_B},
    {XK_n, KEY_N},
    {XK_m, KEY_M},
    {XK_comma, KEY_COMMA},
    {XK_period, KEY_DOT},
    {XK_minus, KEY_SLASH},

    {XK_KP_Multiply, KEY_KPASTERISK},

    {XK_Caps_Lock, KEY_CAPSLOCK},
    {XK_F1, KEY_F1},
    {XK_F2, KEY_F2},
    {XK_F3, KEY_F3},
    {XK_F4, KEY_F4},
    {XK_F5, KEY_F5},
    {XK_F6, KEY_F6},
    {XK_F7, KEY_F7},
    {XK_F8, KEY_F8},
    {XK_F9, KEY_F9},
    {XK_F10, KEY_F10},
    {XK_F11, KEY_F11},
    {XK_F12, KEY_F12},

    {XK_Num_Lock, KEY_NUMLOCK},
    {XK_Scroll_Lock, KEY_SCROLLLOCK},
    {XK_KP_7, KEY_KP7},

    {XK_KP_8, KEY_KP8},
    {XK_KP_9, KEY_KP9},
    {XK_KP_Subtract, KEY_KPMINUS},
    {XK_KP_4, KEY_KP4},
    {XK_KP_5, KEY_KP5},
    {XK_KP_6, KEY_KP6},
    {XK_KP_Add, KEY_KPPLUS},
    {XK_KP_1, KEY_KP1},
    {XK_KP_2, KEY_KP2},
    {XK_KP_3, KEY_KP3},
    {XK_KP_0, KEY_KP0},
    {XK_KP_Separator, KEY_KPDOT},

    {XK_KP_Enter, KEY_KPENTER},

    {XK_KP_Divide, KEY_KPSLASH},
    {XK_Sys_Req, KEY_SYSRQ},

    {XK_Home, KEY_HOME},
    {XK_Up, KEY_UP},
    {XK_Page_Up, KEY_PAGEUP},
    {XK_Left, KEY_LEFT},
    {XK_Right, KEY_RIGHT},
    {XK_End, KEY_END},
    {XK_Down, KEY_DOWN},
    {XK_Page_Down, KEY_PAGEDOWN},
    {XK_Insert, KEY_INSERT},
    {XK_Delete, KEY_DELETE},
    {XK_Pause, KEY_PAUSE},

    {XK_space, KEY_SPACE}
};

std::map<uint32_t, int> vncShiftScanToHID = {
    {XK_Escape, KEY_ESC},

    {XK_exclam, KEY_1},
    {XK_quotedbl, KEY_2},
    {XK_section, KEY_3},
    {XK_dollar, KEY_4},
    {XK_percent, KEY_5},
    {XK_ampersand, KEY_6},
    {XK_slash, KEY_7},
    {XK_parenleft, KEY_8},
    {XK_parenright, KEY_9},
    {XK_equal, KEY_0},
    {XK_question, KEY_MINUS},
    {XK_dead_grave, KEY_EQUAL},


    {XK_BackSpace, KEY_BACKSPACE},

    {XK_ISO_Left_Tab, KEY_TAB},
    {XK_Q, KEY_Q},
    {XK_W, KEY_W},
    {XK_E, KEY_E},
    {XK_R, KEY_R},
    {XK_T, KEY_T},
    {XK_Z, KEY_Y},
    {XK_U, KEY_U},
    {XK_I, KEY_I},
    {XK_O, KEY_O},
    {XK_P, KEY_P},
    {XK_Udiaeresis, KEY_LEFTBRACE},
    {XK_asterisk, KEY_RIGHTBRACE},
    
    {XK_Return, KEY_ENTER},

    {XK_A, KEY_A},
    {XK_S, KEY_S},
    {XK_D, KEY_D},
    {XK_F, KEY_F},
    {XK_G, KEY_G},
    {XK_H, KEY_H},
    {XK_J, KEY_J},
    {XK_K, KEY_K},
    {XK_L, KEY_L},
    {XK_Odiaeresis, KEY_SEMICOLON},
    {XK_Adiaeresis, KEY_APOSTROPHE},
    {XK_apostrophe, KEY_BACKSLASH},

    {XK_greater, KEY_102ND},
    {XK_Y, KEY_Z},
    {XK_X, KEY_X},
    {XK_C, KEY_C},
    {XK_V, KEY_V},
    {XK_B, KEY_B},
    {XK_N, KEY_N},
    {XK_M, KEY_M},
    {XK_semicolon, KEY_COMMA},
    {XK_colon, KEY_DOT},
    {XK_underscore, KEY_SLASH},

    {XK_KP_Multiply, KEY_KPASTERISK},


    {XK_Num_Lock, KEY_NUMLOCK},
    {XK_Scroll_Lock, KEY_SCROLLLOCK},
    {XK_KP_7, KEY_KP7},

    {XK_KP_8, KEY_KP8},
    {XK_KP_9, KEY_KP9},
    {XK_KP_Subtract, KEY_KPMINUS},
    {XK_KP_4, KEY_KP4},
    {XK_KP_5, KEY_KP5},
    {XK_KP_6, KEY_KP6},
    {XK_KP_Add, KEY_KPPLUS},
    {XK_KP_1, KEY_KP1},
    {XK_KP_2, KEY_KP2},
    {XK_KP_3, KEY_KP3},
    {XK_KP_0, KEY_KP0},
    {XK_KP_Separator, KEY_KPDOT},

    {XK_KP_Enter, KEY_KPENTER},

    {XK_KP_Divide, KEY_KPSLASH},
    {XK_Sys_Req, KEY_SYSRQ},

    {XK_Home, KEY_HOME},
    {XK_Up, KEY_UP},
    {XK_Page_Up, KEY_PAGEUP},
    {XK_Left, KEY_LEFT},
    {XK_Right, KEY_RIGHT},
    {XK_End, KEY_END},
    {XK_Down, KEY_DOWN},
    {XK_Page_Down, KEY_PAGEDOWN},
    {XK_Insert, KEY_INSERT},
    {XK_Delete, KEY_DELETE},
    {XK_Pause, KEY_PAUSE},

    {XK_space, KEY_SPACE}
};

std::map<uint32_t, int> vncAltGrScanToHID = {
    {XK_Escape, KEY_ESC},

    {XK_onesuperior, KEY_1},
    {XK_quotedbl, KEY_2},
    {XK_section, KEY_3},
    {XK_dollar, KEY_4},
    {XK_percent, KEY_5},
    {XK_ampersand, KEY_6},
    {XK_braceleft, KEY_7},
    {XK_bracketleft, KEY_8},
    {XK_bracketright, KEY_9},
    {XK_braceright, KEY_0},
    {XK_backslash, KEY_MINUS},
    {XK_dead_grave, KEY_EQUAL},


    {XK_BackSpace, KEY_BACKSPACE},

    {XK_ISO_Left_Tab, KEY_TAB},
    {XK_at, KEY_Q},
    {XK_W, KEY_W},
    {XK_E, KEY_E},
    {XK_R, KEY_R},
    {XK_T, KEY_T},
    {XK_Z, KEY_Y},
    {XK_U, KEY_U},
    {XK_I, KEY_I},
    {XK_O, KEY_O},
    {XK_P, KEY_P},
    {XK_Udiaeresis, KEY_LEFTBRACE},
    {XK_asterisk, KEY_RIGHTBRACE},
    
    {XK_Return, KEY_ENTER},

    {XK_A, KEY_A},
    {XK_S, KEY_S},
    {XK_D, KEY_D},
    {XK_F, KEY_F},
    {XK_G, KEY_G},
    {XK_H, KEY_H},
    {XK_J, KEY_J},
    {XK_K, KEY_K},
    {XK_lstroke, KEY_L},
    {XK_Odiaeresis, KEY_SEMICOLON},
    {XK_Adiaeresis, KEY_APOSTROPHE},
    {XK_apostrophe, KEY_BACKSLASH},

    {XK_bar, KEY_102ND},
    {XK_Y, KEY_Z},
    {XK_X, KEY_X},
    {XK_C, KEY_C},
    {XK_V, KEY_V},
    {XK_B, KEY_B},
    {XK_N, KEY_N},
    {XK_M, KEY_M},
    {XK_semicolon, KEY_COMMA},
    {XK_colon, KEY_DOT},
    {XK_underscore, KEY_SLASH},

    {XK_KP_Multiply, KEY_KPASTERISK},


    {XK_Num_Lock, KEY_NUMLOCK},
    {XK_Scroll_Lock, KEY_SCROLLLOCK},
    {XK_KP_7, KEY_KP7},

    {XK_KP_8, KEY_KP8},
    {XK_KP_9, KEY_KP9},
    {XK_KP_Subtract, KEY_KPMINUS},
    {XK_KP_4, KEY_KP4},
    {XK_KP_5, KEY_KP5},
    {XK_KP_6, KEY_KP6},
    {XK_KP_Add, KEY_KPPLUS},
    {XK_KP_1, KEY_KP1},
    {XK_KP_2, KEY_KP2},
    {XK_KP_3, KEY_KP3},
    {XK_KP_0, KEY_KP0},
    {XK_KP_Separator, KEY_KPDOT},

    {XK_KP_Enter, KEY_KPENTER},

    {XK_KP_Divide, KEY_KPSLASH},
    {XK_Sys_Req, KEY_SYSRQ},

    {XK_Home, KEY_HOME},
    {XK_Up, KEY_UP},
    {XK_Page_Up, KEY_PAGEUP},
    {XK_Left, KEY_LEFT},
    {XK_Right, KEY_RIGHT},
    {XK_End, KEY_END},
    {XK_Down, KEY_DOWN},
    {XK_Page_Down, KEY_PAGEDOWN},
    {XK_Insert, KEY_INSERT},
    {XK_Delete, KEY_DELETE},
    {XK_Pause, KEY_PAUSE},

    {XK_space, KEY_SPACE}
};